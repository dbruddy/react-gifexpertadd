{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","placeholder","value","onChange","target","GifItem","url","title","id","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,sBACIC,SATa,SAACC,GAClBA,EAAEC,iBAEFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAId,SAGI,uBACIK,KAAK,OACLC,YAAY,uBACZC,MAAOR,EACPS,SAnBS,SAACN,GAClBF,EAAcE,EAAEO,OAAOF,a,QCIhBG,EAVC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,IAASC,GAAW,EAAfC,GAAe,EAAXD,OAEvB,OACI,sBAAKE,UAAU,2DAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKJ,IACpB,4BAAIA,Q,uBCUDK,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENR,EAFM,iDAE2CS,UAAUF,GAFrD,+DAGOG,MAAOV,GAHd,cAGNW,EAHM,gBAISA,EAAKC,OAJd,uBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHd,GAAIc,EAAId,GACRD,MAAOe,EAAIf,MACXD,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAV9B,kBAeLc,GAfK,4CAAH,sDCoCEK,EA9BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA0BtC,OAnBAC,qBAAU,WACNC,YAAW,WACPlB,EAASC,GACRkB,MAAK,SAAAC,GACFJ,EAAS,CACLT,KAAMa,EACNN,SAAS,SAGlB,OACJ,CAACb,IASGc,EDpBwBM,CAAcpB,GAAjCU,EAHgB,EAGrBJ,KAAaO,EAHQ,EAGRA,QAQpB,OACI,qCACA,6BAAKb,IACJa,GAAW,mBAAGjB,UAAU,mDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAId,aEOlB0B,EA7BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,WAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KASvB,OACA,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAG5B,6BAES2C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCf7BuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d40c4c1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setCategories(cats => [inputValue, ...cats]);\n        setInputValue('');\n    }\n\n    return ( \n        <form\n            onSubmit={handleSubmit}\n        >\n            <input\n                type=\"text\"\n                placeholder=\"Agrega una categoria\"\n                value={inputValue}\n                onChange={handleChange}\n            >\n            </input>\n            \n        </form>\n     );\n}\n \nexport default AddCategory;\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react';\n\nconst GifItem = ({url, id, title}) => {\n    \n    return ( \n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n     );\n}\n \nexport default GifItem;\n\n","const getGifs = async (category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=0cHOD1SGv57OJphV1LtNgDRMSMEgqY40`;\n    const resp = await fetch (url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    // console.log(gifs);\n    return gifs;\n}\nexport default getGifs;","import React from 'react';\n// import React, {useEffect, useState} from 'react';\nimport GifItem from './GifItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import getGifs from '../helpers/getGifs'\n\nconst GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n    const {data:images, loading} = useFetchGifs( category );\n\n    // useEffect(() => {\n        \n    //     getGifs(category).then(imgs => setImages(imgs));\n\n    // }, [category]);\n\n    return ( \n        <>\n        <h2>{category}</h2>\n        {loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p>}\n        <div className=\"card-grid\">\n            \n            {\n                images.map (img => (\n                    <GifItem\n                        key={img.id}\n                        {...img}\n                    />\n                ))\n            }\n        </div>\n        </>\n     );\n}\n \nexport default GifGrid;","import {useState, useEffect} from 'react'\nimport getGifs from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        setTimeout(() => {\n            getGifs (category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n        }, 3000);\n    }, [category])\n\n    // setTimeout(() => {\n    //     setstate({\n    //         data: [1,2,3,4,5,6,7,8],\n    //         loading: false\n    //     })\n    // }, 3000)\n\n    return state; // {data: [], loading: true}\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GitExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Naruto']);\n\n    // const addCategory = () => {\n    //     // setCategories([...categories, 'Tenis']);\n    //     setCategories(cats => [...cats, 'Tenis']);\n    // }\n\n    return (\n    <>\n       <h1>GitExpertApp</h1>\n       <AddCategory setCategories={setCategories} />\n       {/* <button onClick={addCategory}>Agregar</button> */}\n       \n       <ol>\n            {\n                categories.map(category => (\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n                    // <li key={category}>{category}</li>\n                ))\n            }\n       </ol> \n    </>\n)}\n \nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './gifExpertApp'\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}